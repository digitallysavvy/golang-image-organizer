name: Build Media Organizer

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            runner: windows-latest
            goos: windows
            goarch: amd64
            extension: .exe
            artifact_name: media-organizer-windows-amd64.exe
          - os: macos-intel
            runner: macos-latest
            goos: darwin
            goarch: amd64
            extension: ""
            artifact_name: media-organizer-macos-intel
          - os: macos-apple-silicon
            runner: macos-latest
            goos: darwin
            goarch: arm64
            extension: ""
            artifact_name: media-organizer-macos-apple-silicon

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download ExifTool binaries
        run: |
          chmod +x download_exiftool.sh
          ./download_exiftool.sh
        shell: bash

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-intel' || matrix.os == 'macos-apple-silicon'
        run: |
          # Install dependencies for Fyne on macOS
          # No additional dependencies needed as Fyne handles this

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows'
        run: |
          # Install dependencies for Fyne on Windows
          # No additional dependencies needed as Fyne handles this

      - name: Build application
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          go build -ldflags="-w -s" -o media-organizer${{ matrix.extension }} image_organizer.go

      - name: Create release directory
        run: |
          mkdir -p release
          cp media-organizer${{ matrix.extension }} release/${{ matrix.artifact_name }}
        shell: bash

      - name: Create README for release
        run: |
          cat > release/README.txt << 'EOF'
          Media Organizer - Built with ExifTool Embedded
          ============================================

          This application organizes images and videos by date and location using metadata.

          Features:
          - Automatic date extraction from EXIF data and filenames
          - GPS location clustering for HEIC/HEIF files and videos
          - Cross-platform support (Windows, macOS)
          - No additional software installation required
          - Full video support with metadata extraction

          Usage:
          1. Run the application
          2. Select source folder containing images and videos
          3. Select output folder for organized media files
          4. Adjust location sensitivity if needed
          5. Click "Start Organizing"

          The application will organize media files into folders by:
          Year/Month-Day/Location/

          Supported formats:
          Images: JPEG, PNG, TIFF, BMP, GIF, HEIC/HEIF, RAW (DNG, CR2, NEF, ARW), AVIF, WebP
          Videos: MOV, MP4, M4V, AVI, MKV, WMV, FLV, WebM, 3GP, MTS, M2TS

          Build: ${{ github.sha }}
          Date: ${{ github.run_id }}
          EOF
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/
          retention-days: 30

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets

          # Copy and rename artifacts
          cp artifacts/media-organizer-windows-amd64.exe/media-organizer-windows-amd64.exe release-assets/
          cp artifacts/media-organizer-macos-intel/media-organizer-macos-intel release-assets/
          cp artifacts/media-organizer-macos-apple-silicon/media-organizer-macos-apple-silicon release-assets/

          # Create zip files for better distribution
          cd release-assets

          # Windows zip
          zip -r media-organizer-windows-amd64.zip media-organizer-windows-amd64.exe ../artifacts/media-organizer-windows-amd64.exe/README.txt

          # macOS Intel zip
          zip -r media-organizer-macos-intel.zip media-organizer-macos-intel ../artifacts/media-organizer-macos-intel/README.txt

          # macOS Apple Silicon zip  
          zip -r media-organizer-macos-apple-silicon.zip media-organizer-macos-apple-silicon ../artifacts/media-organizer-macos-apple-silicon/README.txt

          # Create universal macOS binary (combine Intel and Apple Silicon)
          lipo -create -output media-organizer-macos-universal \
            media-organizer-macos-intel media-organizer-macos-apple-silicon 2>/dev/null || \
            cp media-organizer-macos-intel media-organizer-macos-universal

          zip -r media-organizer-macos-universal.zip media-organizer-macos-universal ../artifacts/media-organizer-macos-intel/README.txt

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## Media Organizer Release

          ### Features
          - 🖼️ **Smart Media Organization**: Automatically organizes images and videos by date and location
          - 📱 **iPhone HEIC Support**: Full GPS extraction from iPhone HEIC/HEIF images  
          - 🗂️ **Intelligent Clustering**: Groups nearby photos using configurable sensitivity
          - 📅 **Multiple Date Sources**: Extracts dates from EXIF, filenames, or file timestamps
          - 🚀 **Embedded ExifTool**: No additional software installation required
          - 🌍 **Cross-Platform**: Works on Windows, macOS (Intel & Apple Silicon)
          - 🎥 **Full Video Support**: Organizes videos by date and location

          ### Supported Formats
          - **Images**: JPEG, PNG, TIFF, BMP, GIF, HEIC/HEIF, RAW (DNG, CR2, NEF, ARW), AVIF, WebP
          - **Videos**: MOV, MP4, M4V, AVI, MKV, WMV, FLV, WebM, 3GP, MTS, M2TS

          ### Downloads

          Choose the appropriate version for your system:

          - **Windows (64-bit)**: `media-organizer-windows-amd64.zip`
          - **macOS (Intel)**: `media-organizer-macos-intel.zip`  
          - **macOS (Apple Silicon)**: `media-organizer-macos-apple-silicon.zip`
          - **macOS (Universal)**: `media-organizer-macos-universal.zip` *(recommended for macOS)*

          ### Installation
          1. Download the appropriate file for your system
          2. Extract the zip file
          3. Run the executable - no installation needed!

          ### Usage
          1. Launch the application
          2. Select your source folder containing images and videos
          3. Choose an output folder for organized media files
          4. Adjust location sensitivity if needed (lower = group closer locations)
          5. Click "Start Organizing"

          Media files will be organized into: `Year/Month-Day/Location/`

          Built with ❤️ using Go and Fyne UI framework.
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-assets/*.zip
            release-assets/media-organizer-*
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
